name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '41 9 * * *' # Ejecuta todos los días a las 9:41 UTC
  push:
    branches: [ "main" ] # Rama principal
    tags: [ 'v*.*.*' ] # Desencadena el flujo de trabajo en push de etiquetas que siguen el patrón semver
  pull_request:
    branches: [ "main" ] # Rama principal

env:
  REGISTRY: ghcr.io # Registro de imágenes Docker
  IMAGE_NAME: ${{ github.repository }} # Nombre de la imagen basado en el repositorio

jobs:
  build:
    runs-on: ubuntu-latest # Ejecuta una máquina virtual Ubuntu con la última versión disponible
    permissions: # Permisos
      contents: read # Leer el contenido del repositorio
      packages: write # Escribir en los paquetes
      id-token: write # Escribir en el token de identidad

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1 # Clona el repositorio

      - name: Install cosign
        if: github.event_name != 'pull_request' # Instala cosign solo si no es un pull request
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2
        with:
          cosign-release: 'v2.1.1'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request' # Inicia sesión en el registro de Docker solo si no es un pull request
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta # Asigna un ID al paso para su posterior referencia
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} # Especifica las imágenes Docker

      - name: Build and push Docker image
        id: build-and-push # Asigna un ID al paso para su posterior referencia
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: . # Especifica el contexto
          push: ${{ github.event_name != 'pull_request' }} # Indica si se debe realizar el push
          tags: ${{ steps.meta.outputs.tags }} # Especifica las etiquetas de la imagen
          labels: ${{ steps.meta.outputs.labels }} # Especifica las etiquetas de la imagen
          cache-from: type=gha # Especifica el tipo de caché
          cache-to: type=gha,mode=max # Especifica el tipo de caché en el que se guardará

# - name: Sign the published Docker image
#   if: ${{ github.event_name != 'pull_request' }}
#   env:
#     TAGS: ${{ steps.meta.outputs.tags }}
#     DIGEST: ${{ steps.build-and-push.outputs.digest }}
#   run: |
#     for tag in ${TAGS}; do
#       cosign sign --yes "${tag}@${DIGEST}"
#     done

