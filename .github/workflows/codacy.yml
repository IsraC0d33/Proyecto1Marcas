name: Codacy Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '23 12 * * 4'  # Lo ejecuta todos los jueves a las 12:23 UTC

permissions:  # Permisos
  contents: read  # Permite solo leer el contenido del repositorio

jobs:
  codacy-security-scan:
    permissions:  # Permisos
      contents: read  # Permite leer el contenido del repositorio
      security-events: write  # Permite escribir eventos de seguridad para subir los resultados SARIF
      actions: read  # Solo requerido por la acción github/codeql-action/upload-sarif
    name: Codacy Security Scan
    runs-on: ubuntu-latest  # Ejecuta una máquina virtual Ubuntu con la última versión disponible

    steps:  # Pasos
      - name: Checkout code
        uses: actions/checkout@v4.1.1  # Utiliza checkout para clonar el repositorio

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@3ff8e64eb4b714c4bee91b7b4eea31c6fc2c4f93
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}  # Token del proyecto de Codacy
          verbose: true  # Salida detallada
          output: results.sarif  # Nombre del archivo SARIF
          format: sarif  # formato de salida
          gh-code-scanning-compat: true 
          
          #Descripcion: >
          # Compatibilidad con GitHub Code Scanning (El análisis de código es una función que se
          # utiliza para analizar el código de un repositorio de GitHub con el 
          # fin de encontrar vulnerabilidades de seguridad y errores de codificación.
          # Cualquier problema identificado por el análisis se muestra en tu repositorio.)
          # para problemas de severidad no relacionados con la seguridad.
           
          max-allowed-issues: 2147483647  # Límite máximo de problemas
